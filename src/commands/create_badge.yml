description: >
  Generate badges from the services of RHEMS BADGES.

parameters:
  api_token:
    type: string
    default: $BADGE_API_TOKEN
    description: "The API Token of RHEMS BADGES. (Required)"
  organization:
    type: string
    default: $CIRCLE_PROJECT_USERNAME
    description: "organization name (Required)"
  repo:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
    description: "if repo is empty it will use ${CIRCLE_PROJECT_REPONAME} (optional)"
  app:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
    description: "app name (Required)"
  status:
    type: enum
    default: "true"
    description: |
        set status true or false. (Required. "true" or "false")
    enum:
      - "true"
      - "false"
  branch:
    type: string
    default: $CIRCLE_BRANCH
    description: "if branche is empty it will use ${CIRCLE_BRANCH} (optional)"
  color:
    type: string
    default: ""
    description: "you can set color (optional)"
  text:
    type: string
    default: ""
    description: "write text for right side (optional)"

steps:
  - run:
      when: on_fail
      name: RHEMS BADGE - Detecting Job Status (FAIL)
      command: |
        echo 'export STATUS=false' > /tmp/RHEMS_JOB_STATUS
  - run:
      when: on_success
      name: RHEMS BADGE  - Detecting Job Status (PASS)
      command: |
        echo 'export STATUS=${STATUS}' > /tmp/RHEMS_JOB_STATUS
  - run:
      when: always
      name: update rhems badge
      environment:
        TOKEN: << parameters.api_token >>
        ORGANIZATION: << parameters.organization >>
        REPO: << parameters.repo >>
        APP: << parameters.app >>
        BRANCH: << parameters.branch >>
        STATUS: << parameters.status >>
        COLOR: << parameters.color >>
        TEXT: << parameters.text >>
      command: << include(scripts/create_badge.sh) >>
